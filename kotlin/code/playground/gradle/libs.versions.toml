[versions]
# Gradle
gradle-wrapper = "8.14"

# Kotlin
kotlin = "2.2.0"
kotlin-logging = "7.0.7"
kotlin-kafka = "0.4.0"
kotlinx-datetime = "0.7.1"
kotlinx-serialization = "1.9.0"
kotlinx-coroutines = "1.10.1"

# Arrow + SuspendApp
arrow = "2.1.2"

# Reactor + RX
reactor-extensions = "1.2.3"
reactor-coroutines = "1.10.2"
rxjava = "3.1.9"

# Cache4k
cache4k = "0.14.0"

# Koog
koog = "0.3.0"

# Xef
xef = "0.0.5-alpha.97"

# Langchain / Langgraph
langchain4j = "1.1.0"
langchain4j-google-ai = "1.1.0-rc1"
langchain4j-ollama = "1.1.0-rc1"
langchain4j-local-ai = "1.1.0-beta7"
langgraph4j = "1.5.14"

# Ktor
ktor = "3.2.1"

# Roboquant
roboquant = "2.2.0"

# Kotest
kotest = "5.9.1"
kotest-testcontainers = "2.0.2"

# Testcontainers
testcontainers = "1.21.3"

# Spotless
spotless = "7.1.0"
ktfmt = "0.56"

# Ktlint
ktlint = "1.7.0"
gradle-ktlint = "12.3.0"

# Other
logback = "1.5.18"

[libraries]
# Kotlin
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }
kotlin-kafka = { module = "io.github.nomisrev:kotlin-kafka", version.ref = "kotlin-kafka" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Arrow + SuspendApp
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-atomic = { module = "io.arrow-kt:arrow-atomic", version.ref = "arrow" }
arrow-resilience = { module = "io.arrow-kt:arrow-resilience", version.ref = "arrow" }
arrow-fx-stm = { module = "io.arrow-kt:arrow-fx-stm", version.ref = "arrow" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
suspendapp = { module = "io.arrow-kt:suspendapp", version.ref = "arrow" }
suspendapp-ktor = { module = "io.arrow-kt:suspendapp-ktor", version.ref = "arrow" }

# Reactor + RX
kotlinx-coroutines-rx3 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-rx3", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "reactor-coroutines" }
reactor-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions", version.ref = "reactor-extensions" }
rxjava = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxjava" }

# Cache4k
cache4k = { module = "io.github.reactivecircus.cache4k:cache4k", version.ref = "cache4k" }

# Koog
koog = { module = "ai.koog:koog-agents", version.ref = "koog" }

# Xef
xef-core = { module = "com.xebia:xef-core", version.ref = "xef" }
xef-reasoning = { module = "com.xebia:xef-reasoning", version.ref = "xef" }
xef-server = { module = "com.xebia:xef-server", version.ref = "xef" }
xef-evaluator = { module = "com.xebia:xef-evaluator", version.ref = "xef" }
xef-postgresql = { module = "com.xebia:xef-postgresql", version.ref = "xef" }

# Langchain / Langgraph
langchain4j = { module = "dev.langchain4j:langchain4j", version.ref = "langchain4j" }
langchain4j-open-ai = { module = "dev.langchain4j:langchain4j-open-ai", version.ref = "langchain4j" }
langchain4j-google-ai = { module = "dev.langchain4j:langchain4j-google-ai-gemini", version.ref = "langchain4j-google-ai" }
langchain4j-ollama = { module = "dev.langchain4j:langchain4j-ollama", version.ref = "langchain4j-ollama" }
langchain4j-local-ai = { module = "dev.langchain4j:langchain4j-local-ai", version.ref = "langchain4j-local-ai" }
langgraph4j = { module = "org.bsc.langgraph4j:langgraph4j-core", version.ref = "langgraph4j" }

# Ktor
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }

# roboquant
roboquant = { module = "org.roboquant:roboquant", version.ref = "roboquant" }
roboquant-ta = { module = "org.roboquant:roboquant-ta", version.ref = "roboquant" }
roboquant-avro = { module = "org.roboquant:roboquant-avro", version.ref = "roboquant" }
roboquant-charts = { module = "org.roboquant:roboquant-charts", version.ref = "roboquant" }
roboquant-jupyter = { module = "org.roboquant:roboquant-jupyter", version.ref = "roboquant" }

# Kotest
kotest-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-testcontainers = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version.ref = "kotest-testcontainers" }

# Testcontainers
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-ollama = { module = "org.testcontainers:ollama", version.ref = "testcontainers" }

# Other
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

[bundles]
kotlin = [
    "kotlin-logging",
    "kotlin-kafka",
    "kotlinx-datetime",
    "kotlinx-coroutines",
    "kotlinx-serialization-json",
]

arrow = [
    "arrow-core",
    "arrow-atomic",
    "arrow-resilience",
    "arrow-fx-stm",
    "arrow-fx-coroutines",
    "suspendapp",
    "suspendapp-ktor"
]

reactor = [
    "kotlinx-coroutines-reactor",
    "kotlinx-coroutines-rx3",
    "reactor-extensions",
    "rxjava"
]

ktor = [
    "ktor-server-core",
    "ktor-server-resources",
    "ktor-server-default-headers",
    "ktor-server-content-negotiation",
    "ktor-server-netty",
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-serialization",
]

xef = [
    "xef-core",
    "xef-reasoning",
    "xef-server",
    "xef-evaluator",
    "xef-postgresql"
]

langchain = [
    "langchain4j",
    "langchain4j-ollama",
    "langchain4j-open-ai",
    "langchain4j-local-ai",
    "langgraph4j"
]

roboquant = [
    "roboquant",
    "roboquant-ta",
    "roboquant-avro",
    "roboquant-charts",
    "roboquant-jupyter"
]

kotest = [
    "kotest-junit5",
    "kotest-assertions",
    "kotest-property",
    "kotest-testcontainers"
]

testcontainers = [
    "testcontainers",
    "testcontainers-ollama"
]

[plugins]
# Kotlin
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# Ktor
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }

# Spotless
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

# Ktlint
gradle-ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "gradle-ktlint" }
